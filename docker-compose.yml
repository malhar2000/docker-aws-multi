version: '3.8'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    # dont need to map ports because nginx will handle it
    # ports:
    #   - "3000:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
  api:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    # dont need to expose port because nginx will handle it
    # ports:
    #   - "5000:5000"
    volumes:
      - ./server:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres
      - PGPORT=5432
    depends_on:
      - postgres
      - redis
  postgres:
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./data:/var/lib/postgresql/data
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    volumes:
      - ./worker:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - redis
  nginx:
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - "3050:80"
    depends_on:
      - client
      - api
